import pygame
import sys
import random

pygame.init()

WIDTH = 300
HEIGHT = 400  # Увеличиваем высоту для отображения текста
LINE_WIDTH = 10
BOARD_ROWS = 3
BOARD_COLS = 3
SQUARE_SIZE = WIDTH // BOARD_COLS

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)

FONT = pygame.font.Font(None, 36)

WINDOW = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Tic Tac Toe")


# Функция для рисования сетки
def draw_grid():
    for i in range(1, BOARD_ROWS):
        pygame.draw.line(WINDOW, WHITE, (0, i * SQUARE_SIZE), (WIDTH, i * SQUARE_SIZE), LINE_WIDTH)
    for j in range(1, BOARD_COLS):
        pygame.draw.line(WINDOW, WHITE, (j * SQUARE_SIZE, 0), (j * SQUARE_SIZE, BOARD_ROWS * SQUARE_SIZE), LINE_WIDTH)


# Функция для рисования текущего состояния доски
def draw_board(board):
    for row in range(BOARD_ROWS):
        for col in range(BOARD_COLS):
            if board[row][col] == 'X':
                pygame.draw.line(WINDOW, WHITE, (col * SQUARE_SIZE, row * SQUARE_SIZE),
                                 ((col + 1) * SQUARE_SIZE, (row + 1) * SQUARE_SIZE), LINE_WIDTH)
                pygame.draw.line(WINDOW, WHITE, ((col + 1) * SQUARE_SIZE, row * SQUARE_SIZE),
                                 (col * SQUARE_SIZE, (row + 1) * SQUARE_SIZE), LINE_WIDTH)
            elif board[row][col] == 'O':
                pygame.draw.circle(WINDOW, WHITE,
                                   (col * SQUARE_SIZE + SQUARE_SIZE // 2, row * SQUARE_SIZE + SQUARE_SIZE // 2),
                                   SQUARE_SIZE // 2 - LINE_WIDTH // 2, LINE_WIDTH)


# Функция для проверки победителя
def check_winner(board, player):
    # Проверка строк
    for row in board:
        if all(symbol == player for symbol in row):
            return True

    # Проверка столбцов
    for col in range(BOARD_COLS):
        if all(board[row][col] == player for row in range(BOARD_ROWS)):
            return True

    # Проверка диагоналей
    if all(board[i][i] == player for i in range(BOARD_ROWS)) or \
            all(board[i][BOARD_COLS - 1 - i] == player for i in range(BOARD_ROWS)):
        return True

    return False


# Функция для хода бота
def bot_move(board, bot_player, human_player):
    # Попытка выиграть
    for row in range(BOARD_ROWS):
        for col in range(BOARD_COLS):
            if board[row][col] == '':
                board[row][col] = bot_player
                if check_winner(board, bot_player):
                    return row, col
                board[row][col] = ''

    # Попытка заблокировать игрока
    for row in range(BOARD_ROWS):
        for col in range(BOARD_COLS):
            if board[row][col] == '':
                board[row][col] = human_player
                if check_winner(board, human_player):
                    board[row][col] = bot_player
                    return row, col
                board[row][col] = ''

    # Случайный ход
    empty_cells = [(row, col) for row in range(BOARD_ROWS) for col in range(BOARD_COLS) if board[row][col] == '']
    return random.choice(empty_cells)


# Функция для отображения текста
def draw_text(text, color, y_offset=0):
    text_surface = FONT.render(text, True, color)
    text_rect = text_surface.get_rect(center=(WIDTH // 2, BOARD_ROWS * SQUARE_SIZE + 50 + y_offset))
    WINDOW.blit(text_surface, text_rect)


# Главная функция игры
def main():
    board = [['' for _ in range(BOARD_COLS)] for _ in range(BOARD_ROWS)]
    player = 'X'
    game_over = False
    clock = pygame.time.Clock()

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

            if not game_over:
                # Ход игрока
                if player == 'X':
                    if event.type == pygame.MOUSEBUTTONDOWN:
                        mouseX = event.pos[0] // SQUARE_SIZE
                        mouseY = event.pos[1] // SQUARE_SIZE

                        if board[mouseY][mouseX] == '':
                            board[mouseY][mouseX] = player
                            if check_winner(board, player):
                                game_over = True
                            elif all(symbol != '' for row in board for symbol in row):
                                game_over = True
                            else:
                                player = 'O'

                # Ход бота
                elif player == 'O':
                    row, col = bot_move(board, 'O', 'X')
                    board[row][col] = player
                    if check_winner(board, player):
                        game_over = True
                    elif all(symbol != '' for row in board for symbol in row):
                        game_over = True
                    else:
                        player = 'X'

            # Перезапуск игры
            if game_over and event.type == pygame.MOUSEBUTTONDOWN:
                board = [['' for _ in range(BOARD_COLS)] for _ in range(BOARD_ROWS)]
                player = 'X'
                game_over = False

        WINDOW.fill(BLACK)
        draw_grid()
        draw_board(board)

        if game_over:
            if check_winner(board, 'X'):
                draw_text("Игрок X выиграл!", RED)
            elif check_winner(board, 'O'):
                draw_text("Игрок O выиграл!", RED)
            else:
                draw_text("Ничья!", RED)
            draw_text("Кликните для перезапуска", WHITE, 40)
        else:
            draw_text(f"Ход игрока: {player}", WHITE)

        pygame.display.update()
        clock.tick(30)  # Ограничение частоты кадров до 30 кадров в секунду


if __name__ == "__main__":
    main()
